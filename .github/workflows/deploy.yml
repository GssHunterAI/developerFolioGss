name: Build and Deploy Portfolio

env:
  CI: false
  GITHUB_USERNAME: ${{ github.repository_owner }}
  REACT_APP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  USE_GITHUB_DATA: "true"
  MEDIUM_USERNAME: "" # Change this to your medium username if you have one

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  # Triggers the workflow on push to master branch
  push:
    branches: [master]
  
  # Scheduled trigger - runs every Monday at 12:00 UTC to keep GitHub data fresh  
  schedule:
    - cron: "0 12 * * 1"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
      contents: read    # to checkout the repository

    steps:
      - name: Checkout Repository üõéÔ∏è
        uses: actions/checkout@v4
        with:
          # Disable token persistence for security
          persist-credentials: false

      - name: Setup Node.js Environment üîß
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies ÔøΩ
        run: npm ci

      - name: Fetch GitHub Profile Data üìä
        run: node fetch.js
        env:
          GITHUB_USERNAME: ${{ github.repository_owner }}
          REACT_APP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USE_GITHUB_DATA: "true"

      - name: Build Portfolio üèóÔ∏è
        run: npm run build
        env:
          GITHUB_USERNAME: ${{ github.repository_owner }}
          REACT_APP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USE_GITHUB_DATA: "true"

      - name: Deploy to GitHub Pages üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          # GitHub automatically provides this token
          token: ${{ secrets.GITHUB_TOKEN }}
          # Deploy to gh-pages branch  
          branch: gh-pages
          # Build output folder
          folder: build
          # Clean the deployment branch before deploying
          clean: true
          # Commit message for deployment
          commit-message: "Deploy portfolio - ${{ github.sha }}"
